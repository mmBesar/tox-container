# Multi-stage build for c-toxcore bootstrap daemon
# Optimized for Pi4 and lightweight deployment

# Build stage
FROM alpine:3.19 AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    cmake \
    make \
    gcc \
    g++ \
    ninja \
    pkgconfig \
    libsodium-dev \
    libconfig-dev \
    linux-headers

# Set working directory
WORKDIR /build

# Clone the upstream branch (sync'd with TokTok/c-toxcore master)
# This will be replaced by your repo's upstream branch during CI build
ARG REPO_URL=https://github.com/TokTok/c-toxcore.git
ARG BRANCH=master
RUN git clone --branch ${BRANCH} --depth 1 ${REPO_URL} .

# Initialize git submodules (required for cmp)
RUN git submodule update --init --recursive

# Configure CMake build
RUN cmake -B _build -G Ninja \
    -DCMAKE_BUILD_TYPE=MinSizeRel \
    -DCMAKE_INSTALL_PREFIX=/opt/toxcore \
    -DENABLE_STATIC=ON \
    -DENABLE_SHARED=OFF \
    -DBOOTSTRAP_DAEMON=ON \
    -DDHT_BOOTSTRAP=ON \
    -DBUILD_TOXAV=OFF \
    -DBUILD_FUN_UTILS=OFF \
    -DAUTOTEST=OFF \
    -DUNITTEST=OFF \
    -DSTRICT_ABI=ON \
    -DMIN_LOGGER_LEVEL=INFO

# Build and install
RUN cmake --build _build --parallel $(nproc)
RUN cmake --install _build

# Create default config template
RUN mkdir -p /opt/toxcore/etc
COPY <<EOF /opt/toxcore/etc/tox-bootstrapd.conf.template
// Tox bootstrap daemon configuration template
// This file is generated by entrypoint.sh from environment variables

// The port to listen on (UDP and TCP)
port = {{TOX_PORT}}

// Enable IPv6? (true/false)
enable_ipv6 = {{TOX_ENABLE_IPV6}}

// Enable LAN discovery? (true/false) 
enable_lan_discovery = {{TOX_ENABLE_LAN_DISCOVERY}}

// Enable TCP relay? (true/false)
enable_tcp_relay = {{TOX_ENABLE_TCP_RELAY}}

// TCP relay ports (array of ports)
tcp_relay_ports = [{{TOX_TCP_RELAY_PORTS}}]

// Path to the secret key file
keys_file_path = "{{TOX_KEYS_FILE}}"

// Path to the PID file
pid_file_path = "{{TOX_PID_FILE}}"

// Enable logging to stdout? (true/false)
enable_log_to_stdout = {{TOX_LOG_TO_STDOUT}}

// Log level (2=INFO, 3=WARNING, 4=ERROR)
log_level = {{TOX_LOG_LEVEL_NUM}}

// MOTD (Message of the Day)
motd = "{{TOX_MOTD}}"

// Bootstrap nodes (only if TOX_ENABLE_PUBLIC_BOOTSTRAP=true)
bootstrap_nodes = (
{{TOX_BOOTSTRAP_NODES_CONFIG}}
)
EOF

# Runtime stage
FROM alpine:3.19

# Install runtime dependencies only
RUN apk add --no-cache \
    libsodium \
    libconfig \
    curl \
    jq \
    su-exec \
    && rm -rf /var/cache/apk/*

# Create tox user and group
RUN addgroup -g 1000 tox && \
    adduser -D -u 1000 -G tox tox

# Copy built binaries and config template
COPY --from=builder /opt/toxcore/bin/tox-bootstrapd /usr/local/bin/
COPY --from=builder /opt/toxcore/bin/DHT_bootstrap /usr/local/bin/
COPY --from=builder /opt/toxcore/etc/tox-bootstrapd.conf.template /etc/

# Create directories
RUN mkdir -p /data /var/log/tox-bootstrapd && \
    chown tox:tox /data /var/log/tox-bootstrapd

# Copy entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD pgrep tox-bootstrapd > /dev/null || exit 1

# Expose ports
EXPOSE 33445/udp 33445/tcp

# Set default environment variables
ENV TOX_PORT=33445 \
    TOX_ENABLE_IPV6=true \
    TOX_ENABLE_LAN_DISCOVERY=true \
    TOX_ENABLE_TCP_RELAY=true \
    TOX_TCP_RELAY_PORTS="33445,33446,33447" \
    TOX_ENABLE_PUBLIC_BOOTSTRAP=true \
    TOX_KEYS_FILE=/data/keys \
    TOX_PID_FILE=/data/tox-bootstrapd.pid \
    TOX_CONFIG_FILE=/data/tox-bootstrapd.conf \
    TOX_LOG_LEVEL=INFO \
    TOX_LOG_TO_STDOUT=true \
    TOX_GENERATE_BOOTSTRAP_INFO=true \
    TOX_BOOTSTRAP_INFO_FILE=/data/bootstrap_info.json \
    TOX_LOCAL_NODE_NAME="Tox Bootstrap Node" \
    TOX_LOCAL_NODE_LOCATION="Local Network" \
    TOX_MOTD="Tox bootstrap node - Help the network grow!" \
    TOX_USER_ID=1000 \
    TOX_GROUP_ID=1000

# Use data directory as volume
VOLUME ["/data"]

# Set working directory
WORKDIR /data

# Use entrypoint script
ENTRYPOINT ["/entrypoint.sh"]

# Default command
CMD ["tox-bootstrapd", "--foreground", "--config", "/data/tox-bootstrapd.conf"]
